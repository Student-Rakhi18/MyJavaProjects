/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package MyPackage;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLIntegrityConstraintViolationException;
import java.sql.ResultSet;
import javax.swing.table.DefaultTableModel;



/**
 *
 * @author DELL
 */
public class BookManagementSystem extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(BookManagementSystem.class.getName());

    /**
     * Creates new form Frame4
     */
    public BookManagementSystem() {
        initComponents();
        Color myColor = new Color(230, 230, 250);
        pnl.setBackground(myColor);
        tblData.getTableHeader().setReorderingAllowed(false);
        tblData.setModel(new DefaultTableModel(
        new Object[][] {}, 
        new String[] {"Book ID", "Book Name", "Book Price"}));
      
    }
    
    public void loadTableData() {
    try {
        Connection con = getConnection();
        String sql = "SELECT * FROM Book";
        PreparedStatement ps = con.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.setRowCount(0); // clear previous rows

        while(rs.next()) {
            int id = rs.getInt("book_id");
            String name = rs.getString("book_name");
            double price = rs.getDouble("book_price");

            model.addRow(new Object[] {id, name, price});
        }
        rs.close();
        ps.close();
        con.close();
    } catch(Exception e) {
        e.printStackTrace();
    }
}

    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnl = new javax.swing.JPanel();
        lblTopic = new javax.swing.JLabel();
        lblID = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblPrice = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        btnInsert = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnShowAll = new javax.swing.JButton();
        lblInput = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Book Management System");
        setResizable(false);

        lblTopic.setFont(new java.awt.Font("Arial Black", 1, 24)); // NOI18N
        lblTopic.setText("Book Management System");

        lblID.setText("Book ID:");

        lblName.setText("Book Name:");

        lblPrice.setText("Book Price:");

        btnInsert.setText("Insert");
        btnInsert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnInsertMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnInsertMouseExited(evt);
            }
        });
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateMouseExited(evt);
            }
        });
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnDeleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnDeleteMouseExited(evt);
            }
        });
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnShowAll.setText("Show All");
        btnShowAll.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnShowAllMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnShowAllMouseExited(evt);
            }
        });
        btnShowAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllActionPerformed(evt);
            }
        });

        lblInput.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblInput.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                " Book ID", "Book Name", "Book Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblData.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tblData.setInheritsPopupMenu(true);
        tblData.setName(""); // NOI18N
        jScrollPane1.setViewportView(tblData);
        if (tblData.getColumnModel().getColumnCount() > 0) {
            tblData.getColumnModel().getColumn(0).setResizable(false);
            tblData.getColumnModel().getColumn(1).setResizable(false);
            tblData.getColumnModel().getColumn(2).setResizable(false);
        }

        javax.swing.GroupLayout pnlLayout = new javax.swing.GroupLayout(pnl);
        pnl.setLayout(pnlLayout);
        pnlLayout.setHorizontalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayout.createSequentialGroup()
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(lblTopic))
                    .addGroup(pnlLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnlLayout.createSequentialGroup()
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnInsert)
                                    .addComponent(lblID)
                                    .addComponent(lblName)
                                    .addComponent(lblPrice))
                                .addGap(39, 39, 39)
                                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(pnlLayout.createSequentialGroup()
                                        .addGap(16, 16, 16)
                                        .addComponent(btnUpdate)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(btnDelete)
                                        .addGap(59, 59, 59)
                                        .addComponent(btnShowAll))
                                    .addComponent(txtID)
                                    .addComponent(txtName)
                                    .addComponent(txtPrice))))))
                .addGap(39, 39, 39))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(lblInput, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(112, 112, 112))
        );
        pnlLayout.setVerticalGroup(
            pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblTopic)
                .addGap(26, 26, 26)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblID)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblName)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblPrice)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(pnlLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnInsert)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnShowAll))
                .addGap(21, 21, 21)
                .addComponent(lblInput, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public Connection getConnection() throws Exception {
        Class.forName("com.mysql.cj.jdbc.Driver");
        return DriverManager.getConnection("jdbc:mysql://localhost:3306/BookStore", "root", "rakhi@sql");
    }

    
    private void btnShowAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllActionPerformed
        // TODO add your handling code here:
        try {
        Connection con = getConnection();
        String sql = "SELECT * FROM Book";
        PreparedStatement ps = con.prepareStatement(sql);
        ResultSet rs = ps.executeQuery();

        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.setRowCount(0); // clear previous rows

        while(rs.next()) {
            int id = rs.getInt("book_id");
            String name = rs.getString("book_name");
            double price = rs.getDouble("book_price");

            model.addRow(new Object[] {id, name, price});
        }
        rs.close();
        ps.close();
        con.close();
        loadTableData();

        lblInput.setText("Data loaded successfully.");
        } catch(Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnShowAllActionPerformed

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        String idText = txtID.getText();
        String name = txtName.getText();
        String priceText = txtPrice.getText();

        try {
            int id = Integer.parseInt(idText);
            double price = Double.parseDouble(priceText);

            Connection con = getConnection();

            String sql = "INSERT INTO book (book_id, book_name, book_price) VALUES (?, ?, ?)";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, id);
            ps.setString(2, name);
            ps.setDouble(3, price);
            
            clearInputs();
            

            // Execute insert
            int rows = ps.executeUpdate();
            if (rows > 0) {
                lblInput.setText("Book inserted successfully.");     
            } else {
                lblInput.setText("Failed to insert book.");
            } 

            // Close resources
            ps.close();
            con.close();
            loadTableData();
            
        } catch (NumberFormatException e) {
            lblInput.setText("Invalid ID or Price format.");
        } catch (SQLIntegrityConstraintViolationException e) {
            lblInput.setText("Book ID already exists.");
        } catch (Exception e) {
            lblInput.setText("Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        String idText = txtID.getText();
        String name = txtName.getText();
        String priceText = txtPrice.getText();
        
        try {
            int id = Integer.parseInt(idText);
            double price = Double.parseDouble(priceText);

            Connection con = getConnection();
            String sql = "UPDATE book SET book_name = ?, book_price = ? WHERE book_id = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setString(1, name);   // ✔️ book_name
            ps.setDouble(2, price);  // ✔️ book_price
            ps.setInt(3, id);
            clearInputs();
            


            int rows = ps.executeUpdate();
            if (rows > 0) {
                lblInput.setText("Book updated successfully.");
            } else {
                lblInput.setText("Book ID not found.");
            }

            ps.close();
            con.close();
            loadTableData();
        } catch (NumberFormatException e) {
            lblInput.setText("Invalid ID or Price format.");
        } catch (Exception e) {
            lblInput.setText("Error: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        String idText = txtID.getText();

        try {
            int id = Integer.parseInt(idText); // Convert string to int

            Connection con = getConnection();

            String sql = "DELETE FROM book WHERE book_id = ?";
            PreparedStatement ps = con.prepareStatement(sql);
            ps.setInt(1, id);
            clearInputs();
            

            int rows = ps.executeUpdate();
            if (rows > 0) {
                lblInput.setText("Book deleted successfully.");
            } else {
                lblInput.setText("Book ID not found.");
            }

            ps.close();
            con.close();
            loadTableData();

        } catch (NumberFormatException e) {
            lblInput.setText("Invalid ID format.");
        } catch (Exception e) {
            lblInput.setText("Error: " + e.getMessage());
            e.printStackTrace();  // Only for developer debug
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnInsertMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseEntered
        // TODO add your handling code here:
        Color myColor = new Color(189, 255, 164);
        btnInsert.setBackground(myColor);
    }//GEN-LAST:event_btnInsertMouseEntered

    private void btnInsertMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnInsertMouseExited
        // TODO add your handling code here:
        btnInsert.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_btnInsertMouseExited

    private void btnDeleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseEntered
        // TODO add your handling code here:
        Color myColor = new Color(241,128,122);
        btnDelete.setBackground(myColor);
    }//GEN-LAST:event_btnDeleteMouseEntered

    private void btnDeleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseExited
        // TODO add your handling code here:
        btnDelete.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_btnDeleteMouseExited

    private void btnUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseEntered
        // TODO add your handling code here:
        Color myColor = new Color(144,200,253);
        btnUpdate.setBackground(myColor);
    }//GEN-LAST:event_btnUpdateMouseEntered

    private void btnUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseExited
        // TODO add your handling code here:
        btnUpdate.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_btnUpdateMouseExited

    private void btnShowAllMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnShowAllMouseEntered
        // TODO add your handling code here:
        Color myColor = new Color(132,122,217);
        btnShowAll.setBackground(myColor);
    }//GEN-LAST:event_btnShowAllMouseEntered

    private void btnShowAllMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnShowAllMouseExited
        // TODO add your handling code here:
        btnShowAll.setBackground(Color.LIGHT_GRAY);
    }//GEN-LAST:event_btnShowAllMouseExited

    private void clearInputs() {
        txtID.setText("");
        txtName.setText("");
        txtPrice.setText("");
    }   

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new BookManagementSystem().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnShowAll;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblID;
    private javax.swing.JLabel lblInput;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblPrice;
    private javax.swing.JLabel lblTopic;
    private javax.swing.JPanel pnl;
    private javax.swing.JTable tblData;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
